image: registry.gitlab.com/cykyrios/godot-builder:4.5-dev-editor-only

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never

stages:
  - setup
  - test
  - docs
  - deploy

variables:
  # Update submodules and force https
  # (doesn't seem to work for submodules hosted on GitHub, update .gitmodules manually)
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_FORCE_HTTPS: "true"

setup-project:
  stage: setup
  script:
    - mv .submodules/gdUnit4/addons/gdUnit4 addons/
    - rm -rf addons/gdUnit4/test
    - godot --headless -v --import
  artifacts:
    expire_in: 20 minutes
    paths:
      - .godot/
      - addons/gdUnit4/

run-tests:
  stage: test
  script:
    - export GODOT_BIN=$(which godot)
    - ./addons/gdUnit4/runtest.sh --headless --ignoreHeadlessMode -c -a addons/godot_insim/test
  artifacts:
    when: always
    name: "Test Report"
    paths:
      - reports/*
    reports:
      junit: reports/**/results.xml

export-demos:
  rules:
    - if: $CI_COMMIT_TAG
  variables:
    package_registry_url: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic"
  stage: deploy
  image: registry.gitlab.com/cykyrios/godot-builder:4.5-dev-desktop
  before_script:
    - apt-get update && apt-get install -y curl zip
  script:
    - sh ./export_demos.sh
    - |
      cd build
      for demo in */; do
        cd "$demo"
        for platform in */; do
          cd "$platform"
          binary_archive="${demo////}_v${CI_COMMIT_TAG}_${platform////}.zip"
          zip -r "$binary_archive" *
          curl --location --header "JOB-TOKEN: ${CI_JOB_TOKEN}" \
            --upload-file "$binary_archive" \
            ${package_registry_url}/demos/${CI_COMMIT_TAG}/${binary_archive}
          cd ..
        done
        cd ..
      done

generate-docs:
  stage: docs
  ## The image used here contains a doctool fix, see Godot PR #106256.
  image: registry.gitlab.com/cykyrios/godot-builder:4.5-dev-docs-generator
  script:
    - apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y git
    - mv .submodules/gdscript_xml_converter/addons/gdscript_xml_converter addons/
    - godot --headless -v --import
    - godot --headless -s ./docs_generator/generate_docs.gd
  artifacts:
    paths:
      - website/sidebars.ts
      - website/src/pages/index.md
      - website/docs/class_ref/*.mdx

build-site:
  stage: deploy
  image: node:lts-alpine3.20
  script:
    - cd website
    - npm install
    - npm run build
  pages:
    publish: website/build
